package main

import (
	"fmt"
	"math"
)

func main() {
	// Исходная последовательность температур
	temps := []float64{
		-35.7, -29.3, -25.4, -27.0, -22.8, -19.5, -15.2, -12.9, -8.7, -5.1,
		-2.3, 1.8, 4.5, 7.9, 11.2, 13.0, 15.5, 17.8, 19.0, 22.4,
		24.5, 27.9, 29.3, 32.5, 35.1, 37.8, 41.2, 43.7, 47.9, 52.3,
		-41.8, 56.7, 61.2, -38.5, 65.9, 70.1, 74.8, 79.3, 83.7, 88.4,
		92.1, 96.8, 101.3, 105.9, 110.2, 114.7, 119.3, 123.8, 128.4, 132.9,
		0.5, -0.7, 9.9, 10.1, 19.9, 20.1, -9.9, -10.1, -19.9, -20.1,
	}

	// Создаем map для группировки
	groups := make(map[int][]float64)

	// У меня решение без сортировки, но с большим использованием памяти(тк я храню все эти группы в памяти).
	// Но: 1) По условию сказано "Объединить эти значения в группы с шагом 10 градусов.".
	// А значит их в любом случае нужно хранить в памяти.
	// 2) Просто понятно что температурные колебания не могут быть большими, а значит группы можно использовать как индекс

	// Группируем температуры
	for _, temp := range temps {
		// Определяем ключ группы (округление до десятков)
		key := int(math.Floor(temp/10)) * 10
		// Добавляем температуру в соответствующую группу
		groups[key] = append(groups[key], temp)
	}

	// Выводим результаты
	for key, values := range groups {
		fmt.Printf("%d: %v\n", key, values)
	}
}
